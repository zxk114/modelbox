name: Publish modelbox images ad
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'new image tag(e.g. v1.1.0)'
        required: true
        default: 'latest'

env:
  BUILD_TYPE: Release
  IMAGE_VERSION: ${{ github.event.inputs.version }}

jobs:
  compile_armd_ubuntu:
    runs-on: ubuntu2004
    outputs:
      IMAGE_NAME_DEV: ${{ steps.env.outputs.IMAGE_NAME_DEV }}
      IMAGE_NAME_RUN: ${{ steps.env.outputs.IMAGE_NAME_RUN }}
    steps:
    - name: Set-env
      id: env
      run: |
        echo "::set-output name=IMAGE_NAME_DEV::modelbox/modelbox-develop-mindspore_1.6.1-cann_5.0.4-ubuntu_20.04-aarch64"
        echo "::set-output name=IMAGE_NAME_RUN::modelbox/modelbox-runtime-mindspore_1.6.1-cann_5.0.4-ubuntu_20.04-aarch64"
    - name: Checkout
      uses: actions/checkout@v3
    - name: CMake
      run: |
        sed -i -e '107,116'H -e '116'G thirdparty/CMake/local-package.in
        sed -i '118,120s@APIGW_Cpp@modelbox-webui@g' thirdparty/CMake/local-package.in
        sed -i '121s@APIGW-cpp-sdk@modelbox-webui@g' thirdparty/CMake/local-package.in
        sed -i '122s@APIGW-cpp-sdk-1.0.2@modelbox-webui@g' thirdparty/CMake/local-package.in
        sed -n '118,127p' thirdparty/CMake/local-package.in
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DWITH_ALL_DEMO=on -DWITH_WEBUI=on -DLOCAL_PACKAGE_PATH=/opt/thirdparty/source
    - name: Build
      working-directory: build
      run: |
        npm cache clean --force
        make package -j8
    - name: Release check
      run: ./docker/artifact_check.sh
      shell: bash
    - name: Prepare Artifact
      run: |
        rm -rf /mnt/*
        cp -af build/release /mnt/
        ls -lh /mnt/

  build_armd_ubuntu_develop_image:
    runs-on: ubuntu2004
    needs: compile_armd_ubuntu
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Download Artifact
        run: cp -af /mnt/release .
      - name: Download for dev package
        run: ./docker/prepare_for_dev.sh
        shell: bash
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: docker/Dockerfile.ascend.develop.ubuntu
          tags: |
            ${{ needs.compile_armd_ubuntu.outputs.IMAGE_NAME_DEV }}:latest
            ${{ needs.compile_armd_ubuntu.outputs.IMAGE_NAME_DEV }}:${{ env.IMAGE_VERSION }}

  build_armd_ubuntu_runtime_image:
    runs-on: ubuntu2004
    needs: [compile_armd_ubuntu,build_armd_ubuntu_develop_image]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Download Artifact
        run: cp -af /mnt/release .
      - name: Download for run package
        run: ./docker/prepare_for_run.sh
        shell: bash
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: docker/Dockerfile.ascend.runtime.ubuntu
          tags: |
            ${{ needs.compile_armd_ubuntu.outputs.IMAGE_NAME_RUN }}:latest
            ${{ needs.compile_armd_ubuntu.outputs.IMAGE_NAME_RUN }}:${{ env.IMAGE_VERSION }}

  test_armd_ubuntu:
    runs-on: ubuntu2004
    needs: build_armd_ubuntu_runtime_image
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: CMake
      run: |
        sed -i -e '107,116'H -e '116'G thirdparty/CMake/local-package.in
        sed -i '118,120s@APIGW_Cpp@modelbox-webui@g' thirdparty/CMake/local-package.in
        sed -i '121s@APIGW-cpp-sdk@modelbox-webui@g' thirdparty/CMake/local-package.in
        sed -i '122s@APIGW-cpp-sdk-1.0.2@modelbox-webui@g' thirdparty/CMake/local-package.in
        sed -n '118,127p' thirdparty/CMake/local-package.in
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DWITH_ALL_DEMO=on -DWITH_WEBUI=on -DLOCAL_PACKAGE_PATH=/opt/thirdparty/source
    - name: Test
      working-directory: build
      run: |
        dpkg -i /mnt/release/*.deb
        python3 -m pip install --no-cache-dir /mnt/release/python/modelbox-*.whl --force-reinstall
        make build-test -j8
        make unittest
