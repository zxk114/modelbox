ARG OS_NAME
ARG OS_VERSION
FROM $OS_NAME:$OS_VERSION

ARG OS_NAME
ARG OS_VERSION

ENV TZ=Asia/Shanghai
ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /root

RUN if [ "$OS_NAME" = "openeuler/openeuler" ];then \
        sed -i 's@http://repo.openeuler.org@https://ftp.agdsn.de/openeuler@g' /etc/yum.repos.d/openEuler.repo && \
        dnf update -y --nogpgcheck && \
        dnf clean all && \
        rm -rf /var/cache/dnf/* && \
        echo "export PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig" >> /etc/bashrc && \
        echo 'export PS1="\[\e[35;1m\][\u@\h \W]$ \[\e[0m\]"' >> /etc/bashrc && \
        echo 'export HISTSIZE=1000' >> /etc/bashrc && \
        sed -i '/TMOUT/s/300/0/g' /etc/bashrc; \
    elif [ "$OS_NAME" = "ubuntu" ];then \
        export DEBIAN_FRONTEND=noninteractive TZ=Asia/Shanghai && \
        apt update && \
        apt install -y --no-install-recommends curl tzdata && \
        apt upgrade -y && \
        rm -rf /var/lib/apt/lists/* && \
        echo "export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig" >> /etc/bash.bashrc && \
        echo 'export PS1="\[\e[35;1m\][\u@\h \W]$ \[\e[0m\]"' >> /etc/bash.bashrc; \
    fi && \
    ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    echo "Asia/Shanghai" > /etc/timezone

RUN mkdir -p /root/.pip && \
    echo "[global]" > /root/.pip/pip.conf && \
    echo "index-url = https://pypi.python.org/simple" >>/root/.pip/pip.conf && \
    echo "trusted-host = pypi.python.org" >>/root/.pip/pip.conf && \
    echo "timeout = 120" >>/root/.pip/pip.conf

RUN if [ "$(arch)" = "aarch64" ];then node_arch="arm64";else node_arch="x64";fi && \
    curl -k -LO https://nodejs.org/dist/v16.20.0/node-v16.20.0-linux-${node_arch}.tar.gz && \
    tar zxf node-v16.20.0-linux-${node_arch}.tar.gz && \
    chown -R root.root node-v16.20.0-linux-${node_arch} && \
    cp -af node-v16.20.0-linux-${node_arch}/* /usr/ && \
    npm config set registry https://registry.npm.taobao.org && \
    npm install -g npm@latest @angular/cli && \
    echo "node: $(node -v)" && \
    echo "npm: $(npm -v)" && \
    rm -rf /root/{*,.npm}

RUN if [ "$OS_NAME" = "openeuler/openeuler" ];then \
        dnf install -y --nogpgcheck vim gcc gcc-c++ make cmake libnsl perf doxygen gcc-gfortran pciutils alsa-lib gdb \
            python3-devel python3-pip python3-numpy python3-pyyaml gtk3-devel gflags-devel clang libpng-devel nasm \
            zlib-devel curl-devel bzip2-devel rpm-build sqlite-devel libffi-devel openssl-devel xz-devel git passwd \
            krb5-devel expat-devel boost-devel ncurses-devel libxml2-devel libssh2-devel bc nc tk-devel lapack-devel \
            readline-devel nss-devel fuse-devel gdbm-devel glibc-devel glibc-debuginfo gnutls-devel net-tools libatomic \
            xauth graphviz-devel mesa-libGL-devel openblas-devel protobuf-c-devel ninja-build && \
        ls -lh /usr/local/* && \
        rm -rf /usr/local/{lib64,share}/* /var/cache/dnf/* && \
        dnf clean all; \
    elif [ "$OS_NAME" = "ubuntu" ];then \
        apt update && \
        if [ "$OS_VERSION" = "18.04" ];then \
            apt install -y python3.7-dev && \
            ln -sf python3.7 /usr/bin/python3; \
        else \
            apt install -y python3-dev; \
            if [ "$OS_VERSION" = "20.04" ];then \
                ln -sf python3.8 /usr/bin/python3; \
            elif [ "$OS_VERSION" = "22.04" ];then \
                ln -sf python3.10 /usr/bin/python3; \
            fi; \
        fi && \
        apt install -y build-essential python3-pip python3-numpy python3-yaml python3-apt python3-setuptools apt-utils  && \
        apt install -y dbus systemd systemd-cron iproute2 gnupg2 curl libcurl4-openssl-dev ca-certificates \
            unzip sudo bash vim gdb git doxygen autoconf cmake gettext openssh-server kmod libopencv-dev \
            pkg-config net-tools pciutils libssl-dev libcpprest-dev netcat mosquitto mosquitto-clients \
            graphviz libgraphviz-dev libfuse-dev libprotobuf-c-dev protobuf-c-compiler duktape-dev libtbb-dev \
            ffmpeg libavcodec-dev libswscale-dev libavformat-dev libjpeg-dev libpng-dev libtiff-dev \
            libopenblas-dev clang clang-tidy libgoogle-glog-dev libgtk-3-dev && \
        update-ca-certificates && apt upgrade -y && \
        rm -rf /var/lib/apt/lists/*; \
    fi
