ARG dtype
FROM modelbox/c83-${dtype}:latest
FROM ubuntu:20.04

ARG dtype

COPY release /opt/release
COPY --from=0 /usr/local/Ascend_dev${dtype} /usr/local/Ascend
COPY --from=0 /usr/local/sbin/npu-smi${dtype} /usr/local/sbin/npu-smi
ADD *.tar.gz /usr/local/

ENV DDK_PATH=/usr/local/Ascend/ascend-toolkit/latest
ENV DRIVER_PATH=/usr/local/Ascend/driver

WORKDIR /root

RUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo "Asia/Shanghai" > /etc/timezone && \
    export DEBIAN_FRONTEND=noninteractive DEBIAN_PRIORITY=low TZ=Asia/Shanghai && \
    apt update && \
    apt install -y python3-dev python3-pip python3-apt python3-setuptools apt-utils build-essential && \
    apt install -y dbus systemd systemd-cron iproute2 gnupg2 curl libcurl4-openssl-dev ca-certificates \
        unzip sudo bash vim gdb git doxygen autoconf cmake gettext openssh-server kmod libopencv-dev \
        pkg-config net-tools pciutils libssl-dev libcpprest-dev netcat mosquitto mosquitto-clients \
        graphviz libgraphviz-dev libfuse-dev libprotobuf-c-dev protobuf-c-compiler duktape-dev libtbb-dev \
        ffmpeg libavcodec-dev libswscale-dev libavformat-dev libjpeg-dev libpng-dev libtiff-dev \
        libopenblas-dev clang clang-tidy libgoogle-glog-dev libgtk-3-dev && \
    update-ca-certificates && apt upgrade -y && \
    ln -sf python3.8 /usr/bin/python3 && \
    rm -rf /var/lib/apt/lists/*

RUN mkdir -p /root/.pip && \
    echo "[global]" > /root/.pip/pip.conf && \
    echo "index-url = https://pypi.python.org/simple" >>/root/.pip/pip.conf && \
    echo "trusted-host = pypi.python.org" >>/root/.pip/pip.conf && \
    echo "timeout = 120" >>/root/.pip/pip.conf && \
    groupadd HwHiAiUser && \
    useradd -g HwHiAiUser -d /home/HwHiAiUser -m HwHiAiUser && \
    python3 -m pip install --no-cache-dir --ignore-installed --upgrade pip setuptools && \
    python3 -m pip install --no-cache-dir wheel psutil numpy attrs psutil decorator protobuf scipy sympy cffi grpcio grpcio-tools requests pillow pyyaml opencv-python==4.5.5.64 && \
    python3 -m pip install --no-cache-dir /usr/local/Ascend/ascend-toolkit/latest/lib64/topi-*-py3-none-any.whl && \
    python3 -m pip install --no-cache-dir /usr/local/Ascend/ascend-toolkit/latest/lib64/te-*-py3-none-any.whl && \
    python3 -m pip install --no-cache-dir /usr/local/Ascend/ascend-toolkit/latest/lib64/hccl-*-py3-none-any.whl && \
    echo "/usr/local/Ascend/ascend-toolkit/latest/lib64" >>/etc/ld.so.conf.d/ascend.conf && \
    echo "/usr/local/Ascend/driver/lib64/driver" >>/etc/ld.so.conf.d/driver.conf && \
    echo "/usr/local/Ascend/driver/lib64/common" >>/etc/ld.so.conf.d/driver.conf && \
    echo "/usr/local/Ascend/driver/lib64" >>/etc/ld.so.conf.d/driver.conf && \
    sed -i '/include/i\/usr/local/lib' /etc/ld.so.conf && \
    rm -rf /root/* /root/.cache

RUN if [ "$(arch)" = "aarch64" ];then node_arch="arm64";else node_arch="x64";fi && \
    curl https://nodejs.org/dist/v16.20.0/node-v16.20.0-linux-${node_arch}.tar.xz|tar -xJ && \
    chown -R root.root node-v16.20.0-linux-${node_arch} && \
    rm -f node-v16.20.0-linux-${node_arch}/LICENSE node-v16.20.0-linux-${node_arch}/*.md && \
    cp -af node-v16.20.0-linux-${node_arch}/* /usr/ && \
    npm config set registry https://registry.npmjs.org/ && \
    npm install -g npm@latest uuid@latest && \
    npm install -g @angular/cli && \
    npm cache clean --force && \
    rm -rf /root/*

RUN if [ "$(arch)" = "aarch64" ];then arch="aarch64";else arch="x64";fi && \
    curl -k -LO https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.9.0/MindSpore/lite/release/linux/$(arch)/ascend/mindspore-lite-1.9.0-linux-${arch}.tar.gz && \
    tar zxf mindspore-lite-1.9.0-linux-${arch}.tar.gz -C /usr/local && \
    ln -sf mindspore-lite-1.9.0-linux-${arch} /usr/local/mindspore-lite && \
    ln -sf /usr/local/mindspore-lite/tools/converter/converter/converter_lite /usr/local/bin/converter_lite && \
    ln -sf /usr/local/mindspore-lite/tools/benchmark/benchmark /usr/local/bin/benchmark && \
    echo "/usr/local/mindspore-lite/runtime/lib" >> /etc/ld.so.conf.d/mindspore-lite.conf && \
    echo "/usr/local/mindspore-lite/tools/converter/lib" >> /etc/ld.so.conf.d/mindspore-lite.conf && \
    echo "/usr/local/mindspore-lite/runtime/third_party/dnnl" >> /etc/ld.so.conf.d/mindspore-lite.conf && \
    rm -rf /root/* /root/.cache

RUN python3 -m pip install --no-cache-dir /opt/release/python/modelbox-*.whl && \
    dpkg -i /opt/release/*.deb && \
    usermod -G HwHiAiUser modelbox && \
    (cd /lib/systemd/system/sysinit.target.wants/; for i in *; \
    do [ $i = systemd-tmpfiles-setup.service ] || rm -f $i; done); \
    rm -f /lib/systemd/system/multi-user.target.wants/*; \
    rm -f /etc/systemd/system/*.wants/*; \
    rm -f /lib/systemd/system/local-fs.target.wants/*; \
    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
    rm -f /lib/systemd/system/basic.target.wants/*; \
    rm -f /lib/systemd/system/anaconda.target.wants/*; \
    sed -i "32aPermitRootLogin yes" /etc/ssh/sshd_config && \
    sed -i 's/^SystemMaxUse=.*/SystemMaxUse=16M/g' /etc/systemd/journald.conf && \
    echo 'export TMOUT=0' >> /etc/bash.bashrc && \
    echo 'export HISTSIZE=1000' >> /etc/bash.bashrc && \
    echo 'export $(cat /proc/1/environ|tr "\\0" "\\n"|xargs)' >> /etc/bash.bashrc && \
    echo 'export LD_LIBRARY_PATH=/usr/local/lib64' >> /etc/bash.bashrc && \
    echo 'source /usr/local/Ascend/ascend-toolkit/set_env.sh' >> /etc/bash.bashrc && \
    echo 'export PS1="\[\e[35;1m\][\u@\h \W]$ \[\e[0m\]"' >> ~/.bashrc && \
    echo "ldconfig &>/dev/null" >> /etc/bash.bashrc && systemctl enable ssh

VOLUME ["/sys/fs/cgroup", "/tmp", "/run", "/run/lock"]
STOPSIGNAL SIGRTMIN+3

CMD ["/sbin/init", "--log-target=journal"]
